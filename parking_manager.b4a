Build1=EjemploSQLite,b4a.EjemploSQLite,Full
File1=Main.bal
File2=page_customer.bal
File3=page_info.bal
File4=page_parked.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
Group=Default Group
Library1=core
Library2=sql
Library3=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="4" android:targetSdkVersion="14"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~
NumberOfFiles=4
NumberOfLibraries=3
NumberOfModules=0
Version=11.5
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Parking Manager
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
#End Region

Sub Process_Globals
	Private xui As XUI
	Private SQLite As SQL
	
End Sub

Sub Globals
	' tabhost
	Private TabHost1 As TabHost
	
	' database
	Private name_db As String
	Private tables_db  As List
	Private table_cars As String
	
	' page customer
	Private customer_label_patent As Label
	Private customer_background As Label
	Private customer_text_patent As EditText
	Private customer_button_patent As Button
	Private customer_delete_table As Button
	
	
	'page parked
	Private parked_listview As ListView
	Private parked_button As Button
	Private query_selector As Cursor
	

	
	Private info_background As Label
	Private info_label_pay As Label
	Private info_label_time As Label
	Private info_label_end As Label
	Private info_label_start As Label
	Private info_label_date As Label
	Private info_label_patent As Label
	
	
	Private label_patent As Label
	Private label_date As Label
	Private label_start As Label
	Private label_end As Label
	Private label_time As Label
	Private label_pay As Label
	
End Sub

Sub Activity_Create(FirstTime As Boolean)
	
	Activity.LoadLayout("Main")
	
	' tabhost
	TabHost1.AddTab("Customer","page_customer.bal")
	TabHost1.AddTab("Parked","page_parked.bal")
	TabHost1.AddTab("Info","page_info.bal")
	
	' database
	name_db = "parking_manager2.db"
	
	' database table_cars
	If FirstTime Then
		tables_db.Initialize
		tables_db.AddAll(Array As String ("cars"))
		table_cars = "(id INTEGER PRIMARY KEY AUTOINCREMENT, patent TEXT, date TEXT, hour TEXT, payment FLOAT)"
		create_db(name_db,tables_db.Get(0), table_cars)
	End If
	
End Sub

Sub create_db (name As String, table As String, col As String)
	SQLite.Initialize(File.DirInternal,name,True)
	SQLite.BeginTransaction
	Try
		SQLite.ExecNonQuery("CREATE TABLE IF NOT EXISTS "&table&" "&col)
		SQLite.TransactionSuccessful
		ToastMessageShow("Successfully created '"&table&"' table",True)
	Catch
		ToastMessageShow("Table creation failed: "&table,True)
		Log("Table creation failed:"&table&", "&LastException.Message)
	End Try
	SQLite.EndTransaction
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Private Sub customer_button_patent_Click
	If customer_text_patent.Text = "" Then
		xui.MsgboxAsync("The patent does not exist, please enter a patent.","Patent Error!")
		Return
	End If
	Dim col,patent,date,hour,time As String
	col = "(patent, date, hour, payment)"
	time = DateTime.Now
	patent = customer_text_patent.Text
	date = DateTime.GetYear(time)&"/"&DateTime.GetMonth(time)&"/"&DateTime.GetDayOfMonth(time)
	If DateTime.GetMinute(time).As(Int) <= 9 Then
		hour = DateTime.GetHour(time)&":0"&DateTime.GetMinute(time)
	Else
		hour = DateTime.GetHour(time)&":"&DateTime.GetMinute(time)
	End If
	insert_into_table(name_db,tables_db.Get(0),col,patent,date,hour,0)
	customer_text_patent.Text = ""	

End Sub

Sub insert_into_table (name As String,table As String,col As String,i1 As String,i2 As String,i3 As String,i4 As String)

	SQLite.Initialize(File.DirInternal,name,True)
	SQLite.BeginTransaction
	Try	
		SQLite.ExecNonQuery2("INSERT INTO "&table&" "&col&" VALUES (?,?,?,?)", Array As Object(i1.ToUpperCase,i2,i3,i4))
		SQLite.TransactionSuccessful
		xui.MsgboxAsync("Patent: "&i1&CRLF&"Date: "&i2&CRLF&"Hour: "&i3&CRLF&"Payment: "&i4,"Insert into: "&table&", successfully")
	Catch
		ToastMessageShow("Insert into failed: "&table,True)
		Log("Insert into failedd:"&table&", "&LastException.Message)
	End Try
	SQLite.EndTransaction
End Sub


Private Sub parked_button_Click
	query_selector=SQLite.ExecQuery("SELECT * FROM "&tables_db.Get(0)&" WHERE payment=0 ORDER BY patent ASC")
	parked_listview.clear
	If query_selector.RowCount>0 Then
		
		For i=0 To query_selector.RowCount-1
			query_selector.Position=i
			Dim p,d,h As String
			p=query_selector.GetString("patent")
			d=query_selector.GetString("date")
			h=query_selector.GetString("hour")
			parked_listview.AddSingleLine(p&" "&d&" "&h)
		Next
	End If
End Sub

Private Sub parked_listview_ItemClick (Position As Int, Value As Object)
	'ToastMessageShow("You select this: "&CRLF&Value,True)
	Dim sf As Object = Msgbox2Async("Press YES to acept or NO to decline","Do you want to pay?","YES","CANCEL","NO",Null,True)
	Wait For (sf) Msgbox_Result (Result As Int)
	If Result = xui.DialogResponse_Positive Then
		TabHost1.CurrentTab = (TabHost1.CurrentTab + 1) Mod TabHost1.TabCount 'switch to the next tab.
		query_selector.Position=Position
		Dim time As String
		time = DateTime.Now
		Dim mi,ho,ti As Int
		Dim da As String
		
		
		label_patent.Text = query_selector.GetString("patent")
		label_date.Text = query_selector.GetString("date")
		label_start.Text = query_selector.GetString("hour")
		
		da = DateTime.GetYear(time)&"/"&DateTime.GetMonth(time)&"/"&DateTime.GetDayOfMonth(time)
		If da <> query_selector.GetString("date") Then
			Log("distintos dias")
			label_end.Text = "23:59"
		Else
			label_end.Text = DateTime.GetHour(time).As(String)&":"&DateTime.GetMinute(time).As(String)	
		End If
		ho = (label_end.Text.SubString2(0,2)).As(Int)-(label_start.Text.SubString2(0,2)).As(Int)
		mi = (label_end.Text.SubString2(3,5)).As(Int)-(label_start.Text.SubString2(3,5)).As(Int)
'			Log(label_end.Text.SubString2(0,2))
'			Log(label_start.Text.SubString2(0,2))
'			Log(label_end.Text.SubString2(3,5))
'			Log(label_start.Text.SubString2(3,5))
'			Log(ho)
'			Log(ho)
		If ho = 0 Then
			ti = ho*60 + mi
		Else
			If mi >= 0 Then
				ti = ho*60 + mi
			Else
				ho = ho - 1
				mi = mi + 60
				ti = ho*60 + mi
			End If
		End If
		label_time.Text = ti&" minutes"
		If ti < 15 Then
			label_pay.Text = "$ 500"
		Else
			label_pay.Text ="$500 + "&(ti-15)&" * $30"&" = $"&(500 +(ti-15)*30).As(String)
		End If
'		Log(da)
'		Log(query_selector.GetString("date"))	
	End If
End Sub

Private Sub customer_delete_table_click
	Msgbox2Async("¿Desea borrar la tabla "&tables_db.Get(0)&"?","Atención!","Si","Cancelar","No",Null,True)
	Wait For Msgbox_Result(Result As Int)
	If Result = DialogResponse.POSITIVE Then
		'Inicialización de la base de datos
		SQLite.Initialize(File.DirInternal,name_db,True)
		
		'Creación de una tabla
		SQLite.BeginTransaction
		Try
			SQLite.ExecNonQuery("DELETE FROM "&tables_db.Get(0))
			'xui.MsgboxAsync("Tabla Eliminada","Mensaje")
			ToastMessageShow("Registros de la tabla: "&tables_db.Get(0)&", eliminados",True)
			SQLite.TransactionSuccessful
		Catch
			Log("ERROR al elminar tabla: "&tables_db.Get(0)&" ,"&LastException.Message)
		End Try
		SQLite.EndTransaction

	End If
	
	
	
End Sub
